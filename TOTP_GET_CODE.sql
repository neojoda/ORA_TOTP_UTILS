create or replace FUNCTION TOTP_GET_CODE(PSECRET IN VARCHAR2, PGAP IN NUMBER) RETURN VARCHAR2
IS
    CBASE32      CONSTANT VARCHAR2(32 CHAR) := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';
    VBITS        VARCHAR2(80 CHAR) := ''; --16 char * 5 bits / Bits representing secret position on CBASE32
    VHEXABITS    VARCHAR2(500) := ''; -- VBITS in HEXA representation
    VUTIME       NUMBER(38); -- Unix time / POSIX Time / Epoch time
    VUTIME30CHK  VARCHAR2(16); -- Unix time in 30 secs chunks (Hexa)
    VLUTIME30CHK VARCHAR2(16); -- Unix time in 30 secs chunks (Hexa) - Last Value used
    VUTIMERANGE  NUMBER(38); -- Unix time adjusted with Gap secs
    VMAC         RAW(100);
    VOFFSET      NUMBER;
    VP1          NUMBER;
    VP2          NUMBER := POWER(2, 31) - 1;
    --TYPE VOUTKEY      CODEROW; -- Store the output
    VOUTKEY VARCHAR2(1000);

    FUNCTION NUM_TO_BIN(PNUM NUMBER) RETURN VARCHAR2 IS
      VBIN VARCHAR2(8);
      VNUM NUMBER := PNUM;
    BEGIN
      IF VNUM = 0
      THEN
        RETURN '0';
      END IF;
      WHILE VNUM > 0
      LOOP
        VBIN := MOD(VNUM, 2) || VBIN;
        VNUM := FLOOR(VNUM / 2);
      END LOOP;
      RETURN VBIN;
    END NUM_TO_BIN;

    FUNCTION BIN_TO_HEX(PNUM VARCHAR2) RETURN VARCHAR2 IS
      VHEX  VARCHAR2(20);
      VHEXC VARCHAR2(1);
    BEGIN
      IF PNUM = 0
      THEN
        RETURN '0';
      END IF;
      FOR I IN 1 .. LENGTH(PNUM) / 4
      LOOP
        SELECT LTRIM(TO_CHAR(BIN_TO_NUM(TO_NUMBER(SUBSTR(PNUM, ((I - 1) * 4) + 1, 1)), TO_NUMBER(SUBSTR(PNUM, ((I - 1) * 4) + 2, 1)), TO_NUMBER(SUBSTR(PNUM, ((I - 1) * 4) + 3, 1)), TO_NUMBER(SUBSTR(PNUM, ((I - 1) * 4) + 4, 1))), 'x')) INTO VHEXC FROM DUAL;
        VHEX := VHEX || VHEXC;
      END LOOP;
      RETURN VHEX;
    END BIN_TO_HEX;

  BEGIN

    FOR C IN 1 .. LENGTH(PSECRET)
    LOOP
      VBITS := VBITS || LPAD(NUM_TO_BIN(INSTR(CBASE32, SUBSTR(PSECRET, C, 1)) - 1), 5, '0');
    END LOOP;

    VHEXABITS := BIN_TO_HEX(VBITS);

    SELECT EXTRACT(DAY FROM(DIFF)) * 86400 + EXTRACT(HOUR FROM(DIFF)) * 3600 + EXTRACT(MINUTE FROM(DIFF)) * 60 + EXTRACT(SECOND FROM(DIFF)) N INTO VUTIME FROM (SELECT CURRENT_TIMESTAMP - TIMESTAMP '1970-01-01 00:00:00 +00:00' DIFF FROM DUAL);

    VUTIMERANGE := VUTIME - FLOOR(PGAP);

    WHILE TRUE
    LOOP
      SELECT LPAD(LTRIM(TO_CHAR(FLOOR(VUTIMERANGE / 30), 'xxxxxxxxxxxxxxxx')), 16, '0') INTO VUTIME30CHK FROM DUAL;
      IF VLUTIME30CHK = VUTIME30CHK -- If last run and code don't change
      THEN
        EXIT;
      END IF;
      VMAC         := DBMS_CRYPTO.MAC(SRC => HEXTORAW(VUTIME30CHK), TYP => DBMS_CRYPTO.HMAC_SH1, KEY => HEXTORAW(VHEXABITS));
      VOFFSET      := TO_NUMBER(SUBSTR(RAWTOHEX(VMAC), -1, 1), 'x');
      VP1          := TO_NUMBER(SUBSTR(RAWTOHEX(VMAC), VOFFSET * 2 + 1, 8), 'xxxxxxxx');
     -- VOUTKEY.CODE := SUBSTR(BITAND(VP1, VP2), -6, 6);
      --PIPE ROW(VOUTKEY);
      VOUTKEY := SUBSTR(BITAND(VP1, VP2), -6, 6);
      VLUTIME30CHK := VUTIME30CHK;
      VUTIMERANGE  := LEAST(VUTIMERANGE + 30, VUTIME + FLOOR(PGAP));
    END LOOP;
    RETURN VOUTKEY;
  END TOTP_GET_CODE;
